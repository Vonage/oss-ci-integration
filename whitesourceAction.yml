name: WhiteSource CI integration

on:
  pull_request:
    branches: [develop] # TODO: replace with your default branch name
  pull_request_review:
    branches: [develop] # TODO: replace with your default branch name

concurrency:
  group: whitesource-${{ github.ref }}
  cancel-in-progress: true

jobs:
  should-scan:
    # Determine if the WhiteSource action should run based on:
    # - PR state must be approved.
    # - PR must include changes to the package.json or package-lock.json files.
    name: WhiteSource Run Conditions
    runs-on: ubuntu-latest
    outputs:
      should-scan: ${{ steps.conditions-check.outputs.should-scan }}
    steps:
      - name: Checkout
        uses: actions/checkout@v2
        with:
          fetch-depth: 0

      - name: Check PR state
        if: ${{ steps.github.event.review.state == 'approved' }}
        run: echo "PR-APPROVED=true" >> $GITHUB_ENV

      - name: Get all changed files
        id: changed-files
        run: echo "CHANGED_FILES=$(git diff --name-only --diff-filter=ACMRT ${{ github.event.pull_request.base.sha }} ${{ github.sha }} | xargs)" >> $GITHUB_ENV

      - name: Check if the packages files changed
        if: ${{ contains(env.CHANGED_FILES, 'package.json') || contains(env.CHANGED_FILES, 'package-lock.json') }}
        run: echo "PACKAGES-CHANGED=true" >> $GITHUB_ENV

      - name: Check if all conditions are met
        id: conditions-check
        if: ${{ env.PR-APPROVED == 'true' && env.PACKAGES-CHANGED == 'true' }}
        run: echo "::set-output name=should-scan::true"

  whitesource-scan:
    name: WhiteSource
    needs: should-scan
    if: ${{ needs.should-scan.outputs.should-scan == 'true' }}
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Setup Node
        uses: actions/setup-node@v2
        with:
          node-version: ${{ secrets.NODE_VERSION }} # TODO: set your node version in your repo's secrets (Settings -> Secrets -> Repository secrets)

      - name: Extract repository name
        run: echo "repository_name=$(echo ${{ github.repository }} | cut -d'/' -f2)" >> $GITHUB_ENV

      - name: WhiteSource CI integration
        uses: Vonage/oss-ci-integration@v1.0
        env:
          WHITESOURCE_PRODUCT_NAME: ${{ secrets.WHITESOURCE_PRODUCT_NAME }}
          WHITESOURCE_PROJECT_NAME: ${{ env.repository_name }}
          WHITESOURCE_GH_PAT: ${{ secrets.WHITESOURCE_GH_PAT }}
          WHITESOURCE_CONFIG_REPO: ${{ secrets.WHITESOURCE_CONFIG_REPO }}
          WHITESOURCE_NPM_TOKEN: ${{ secrets.WHITESOURCE_NPM_TOKEN }}
          WHITESOURCE_API_KEY: ${{ secrets.WHITESOURCE_API_KEY }}
          WHITESOURCE_USER_KEY: ${{ secrets.WHITESOURCE_USER_KEY }}

      - name: Policy Rejection Summary
        if: ${{ always() }}
        run: cat ./whitesource/policyRejectionSummary.json

  # This job makes it so you'll have a single branch protection rule for all PRs,
  # including PRs that didn't change the package.json or package-lock.json files.
  # TODO: Under branch protection rules, enfore the 'WhiteSource Scan Completed' check.
  status-check:
    name: WhiteSource Scan Completed
    needs: [should-scan, whitesource-scan]
    # The always() check is needed to ensure that this job runs even if the previous jobs fail/canceled.
    if: ${{ needs.should-scan.outputs.should-scan == 'true' && always() }}
    runs-on: ubuntu-latest
    steps:
      - name: Exits if the scan failed, when it should have succeeded
        if: ${{ needs.whitesource-scan.result != 'success' }}
        run: exit 1
